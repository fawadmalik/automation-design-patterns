Before each test method Sets up the test environment :
- initializes the WebDriver, 
- sets up the ChromeDriver, 
- and configures implicit wait.
The browser selected for the test needs a browser driver downloaded, which gets updated by the driver creator from time to time. We use a library called WebDriverManager to automatically download the correct version of the driver matching the browser.

After each test method cleans up the test environment
- Quits the WebDriver instance to close the browser.

First test: verifyPurchaseSuccessWithNewClient
The test steps and Asserts the expected outcomes at each step.
- Navigate to the demo e-commerce website
- Add Falcon 9 product to the cart
- Wait for 10 seconds to ensure the product is added to the cart
- Click on the "View Cart" button
- Apply coupon code "happybirthday"
- Wait for 5 seconds to ensure the coupon is applied
- Verify the coupon application message
- Update product quantity to 2
- Short wait before sending keys
- Wait for 5 seconds to ensure the quantity is updated
- Click on "Update Cart" button
- Wait for 5 seconds to ensure the cart is updated
- Verify the total amount
- Proceed to checkout
- Fill in billing details
- Pause for 5 seconds before placing the order
- Place the order
- Pause for 10 seconds to ensure the order is processed
- Verify the order received message

Most modern websites use modern JavaScript technologies where most operations are asynchronous. 
We have used hardcoded pauses with Thread.sleep(5000) for a 5 second wait. This is one area that 
we will focus on to optimize in later versions of this test.
The static variables are for sharing data between other tests in the class.

### When tests fail
It could mean any one or all of the following:
1. Real defect or problem in the SUT (System Under test)
2. Test environment issue (network was down, test environment was not ready etc.)
3. Defect in the test code, specially if the tests fail intermittently. These are called non-deterministic or flaky tests.

Second Test : verifyPurchaseSuccessWithExistingClient
The second test will:
- reuse the email from the first test and repeat roughtly the steps from the first test. This will test prefilling of all user info fields and verify complete the purchase.
- extract the generated order number displayed on the success order page at the end of the test.

This captured orderd number will be used in the third test to verify that the information is displayed correctly in the "My Account" section.